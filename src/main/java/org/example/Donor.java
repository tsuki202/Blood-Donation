package org.example;

import java.sql.*;
import java.util.Scanner;

@Role("DONOR")
public class Donor extends User {
    private String name;
    private String surname;
    private int year;
    private String bloodType;
    private int weight;
    private int height;

    public Donor(int id, String username, String name, String surname, int year, String bloodType, int weight, int height) {
        super(id, username, "DONOR");
        this.name = name;
        this.surname = surname;
        this.year = year;
        this.bloodType = bloodType;
        this.weight = weight;
        this.height = height;
    }

    @Override
    public void showMenu() {
        Scanner scanner = new Scanner(System.in);
        int choice;
        do {
            System.out.println("\nü©∏ –í–∏ –∑–∞–π—à–ª–∏ —è–∫ –î–æ–Ω–æ—Ä " + name + " " + surname);
            System.out.println("1 - –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –º–æ—ó –¥–∞–Ω—ñ");
            System.out.println("2 - –ó–∞–ø–æ–≤–Ω–∏—Ç–∏ –∞–Ω–∫–µ—Ç—É –¥–æ–Ω–æ—Ä–∞");
            System.out.println("3 - –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é –¥–æ–Ω–∞—Ü—ñ–π");
            System.out.println("4 - –ó–∞–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –¥–æ–Ω–∞—Ü—ñ—é");
            System.out.println("5 - –í–∏–π—Ç–∏");
            System.out.print("–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é: ");

            while (!scanner.hasNextInt()) {
                System.out.println("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
                scanner.next();
            }

            choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1 -> viewMyData();
                case 2 -> fillDonorQuestionnaire();
                case 3 -> viewDonationHistory();
                case 4 -> scheduleDonation();
                case 5 -> System.out.println("ü©∏ –í–∏—Ö—ñ–¥ –∑ –º–µ–Ω—é –¥–æ–Ω–æ—Ä–∞.");
                default -> System.out.println("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
            }
        } while (choice != 5);
    }

    private void viewMyData() {
        System.out.println("\nüìã –í–∞—à—ñ –¥–∞–Ω—ñ:");
        System.out.println("–Ü–º'—è: " + name);
        System.out.println("–ü—Ä—ñ–∑–≤–∏—â–µ: " + surname);
        System.out.println("–†—ñ–∫ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è: " + year);
        System.out.println("–ì—Ä—É–ø–∞ –∫—Ä–æ–≤—ñ: " + bloodType);
        System.out.println("–í–∞–≥–∞: " + weight + " –∫–≥");
        System.out.println("–ó—Ä—ñ—Å—Ç: " + height + " —Å–º");
    }

    private void fillDonorQuestionnaire() {
        System.out.println("\nüìù –ê–Ω–∫–µ—Ç–∞ –¥–æ–Ω–æ—Ä–∞ –∫—Ä–æ–≤—ñ");

        Scanner scanner = new Scanner(System.in);

        // 1. –ó–∞–≥–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è
        System.out.println("\nüîπ 1. –ó–∞–≥–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è");
        System.out.print("üìå –í—ñ–∫: " + (2023 - year));
        System.out.print("\nüìå –í–∞–≥–∞ (–∫–≥): ");
        this.weight = Integer.parseInt(scanner.nextLine());
        System.out.print("üìå –ó—Ä—ñ—Å—Ç (—Å–º): ");
        this.height = Integer.parseInt(scanner.nextLine());

        // 2. –ó–∞–≥–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω –∑–¥–æ—Ä–æ–≤'—è
        System.out.println("\nüîπ 2. –ó–∞–≥–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω –∑–¥–æ—Ä–æ–≤'—è");
        System.out.print("‚úÖ –ß–∏ –≤—ñ–¥—á—É–≤–∞—î—Ç–µ –≤–∏ —Å–µ–±–µ –¥–æ–±—Ä–µ —Å—å–æ–≥–æ–¥–Ω—ñ? (–¢–∞–∫/–ù—ñ): ");
        String feelsGood = scanner.nextLine();
        System.out.print("‚úÖ –ß–∏ –±—É–ª–∏ —É –≤–∞—Å –æ—Å—Ç–∞–Ω–Ω—ñ–º —á–∞—Å–æ–º —Å–∏–º–ø—Ç–æ–º–∏ –∑–∞—Å—Ç—É–¥–∏, –≥—Ä–∏–ø—É? (–¢–∞–∫/–ù—ñ): ");
        String hadSymptoms = scanner.nextLine();
        System.out.print("‚úÖ –ß–∏ –ø—Ä–∏–π–º–∞—î—Ç–µ –≤–∏ –∑–∞—Ä–∞–∑ –ª—ñ–∫–∏? (–Ø–∫—â–æ —Ç–∞–∫, –≤–∫–∞–∂—ñ—Ç—å —è–∫—ñ): ");
        String medications = scanner.nextLine();

        // 3. –•—Ä–æ–Ω—ñ—á–Ω—ñ –∑–∞—Ö–≤–æ—Ä—é–≤–∞–Ω–Ω—è
        System.out.println("\nüîπ 3. –•—Ä–æ–Ω—ñ—á–Ω—ñ —Ç–∞ —Å–µ—Ä–π–æ–∑–Ω—ñ –∑–∞—Ö–≤–æ—Ä—é–≤–∞–Ω–Ω—è");
        System.out.print("‚úÖ –ß–∏ –º–∞—î—Ç–µ –≤–∏ —Å–µ—Ä—Ü–µ–≤–æ-—Å—É–¥–∏–Ω–Ω—ñ –∑–∞—Ö–≤–æ—Ä—é–≤–∞–Ω–Ω—è, –¥—ñ–∞–±–µ—Ç? (–¢–∞–∫/–ù—ñ): ");
        String chronicDiseases = scanner.nextLine();
        System.out.print("‚úÖ –ß–∏ –º–∞—î—Ç–µ –≤–∏ –∞–ª–µ—Ä–≥—ñ—é –Ω–∞ –º–µ–¥–∏–∫–∞–º–µ–Ω—Ç–∏? (–¢–∞–∫/–ù—ñ): ");
        String allergies = scanner.nextLine();

        // 4. –ü–æ–≤–µ–¥—ñ–Ω–∫–æ–≤—ñ —Ñ–∞–∫—Ç–æ—Ä–∏
        System.out.println("\nüîπ 4. –ü–æ–≤–µ–¥—ñ–Ω–∫–æ–≤—ñ —Ñ–∞–∫—Ç–æ—Ä–∏");
        System.out.print("‚úÖ –ß–∏ —Ä–æ–±–∏–ª–∏ –≤–∞–º –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 6 –º—ñ—Å—è—Ü—ñ–≤? (–¢–∞–∫/–ù—ñ): ");
        String recentSurgeries = scanner.nextLine();
        System.out.print("‚úÖ –ß–∏ –±—É–ª–∏ —É –≤–∞—Å —Ç–∞—Ç—É—é–≤–∞–Ω–Ω—è –∑–∞ –æ—Å—Ç–∞–Ω–Ω—ñ 6 –º—ñ—Å—è—Ü—ñ–≤? (–¢–∞–∫/–ù—ñ): ");
        String tattoos = scanner.nextLine();
        System.out.print("‚úÖ –ß–∏ –≤–∂–∏–≤–∞–ª–∏ –≤–∏ –∞–ª–∫–æ–≥–æ–ª—å –æ—Å—Ç–∞–Ω–Ω—ñ 48 –≥–æ–¥–∏–Ω? (–¢–∞–∫/–ù—ñ): ");
        String alcohol = scanner.nextLine();

        // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –∞–Ω–∫–µ—Ç–∏ –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö
        try (Connection conn = DatabaseManager.getConnection()) {
            PreparedStatement stmt = conn.prepareStatement(
                    "INSERT INTO donor_questionnaires (donor_id, weight, height, feels_good, had_symptoms, medications, " +
                            "chronic_diseases, allergies, recent_surgeries, tattoos, alcohol) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");

            stmt.setInt(1, id);
            stmt.setInt(2, weight);
            stmt.setInt(3, height);
            stmt.setString(4, feelsGood);
            stmt.setString(5, hadSymptoms);
            stmt.setString(6, medications);
            stmt.setString(7, chronicDiseases);
            stmt.setString(8, allergies);
            stmt.setString(9, recentSurgeries);
            stmt.setString(10, tattoos);
            stmt.setString(11, alcohol);

            stmt.executeUpdate();
            System.out.println("\n‚úÖ –ê–Ω–∫–µ—Ç—É —É—Å–ø—ñ—à–Ω–æ –∑–±–µ—Ä–µ–∂–µ–Ω–æ!");
        } catch (Exception e) {
            System.out.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –∞–Ω–∫–µ—Ç–∏: " + e.getMessage());
        }
    }

    private void viewDonationHistory() {
        try (Connection conn = DatabaseManager.getConnection()) {
            PreparedStatement stmt = conn.prepareStatement(
                    "SELECT donation_date, amount, location FROM donations WHERE donor_id = ? ORDER BY donation_date DESC");
            stmt.setInt(1, id);

            ResultSet rs = stmt.executeQuery();

            System.out.println("\nüìÖ –Ü—Å—Ç–æ—Ä—ñ—è –≤–∞—à–∏—Ö –¥–æ–Ω–∞—Ü—ñ–π:");
            boolean hasDonations = false;

            while (rs.next()) {
                hasDonations = true;
                System.out.println("\n–î–∞—Ç–∞: " + rs.getDate("donation_date"));
                System.out.println("–û–±'—î–º: " + rs.getInt("amount") + " –º–ª");
                System.out.println("–ú—ñ—Å—Ü–µ: " + rs.getString("location"));
            }

            if (!hasDonations) {
                System.out.println("–£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î —ñ—Å—Ç–æ—Ä—ñ—ó –¥–æ–Ω–∞—Ü—ñ–π.");
            }
        } catch (Exception e) {
            System.out.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ —ñ—Å—Ç–æ—Ä—ñ—ó –¥–æ–Ω–∞—Ü—ñ–π: " + e.getMessage());
        }
    }

    private void scheduleDonation() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("\nüìÖ –ó–∞–ø–∏—Å –Ω–∞ –¥–æ–Ω–∞—Ü—ñ—é –∫—Ä–æ–≤—ñ");

        System.out.print("–í–≤–µ–¥—ñ—Ç—å –±–∞–∂–∞–Ω—É –¥–∞—Ç—É (yyyy-mm-dd): ");
        String date = scanner.nextLine();

        System.out.print("–í–≤–µ–¥—ñ—Ç—å –±–∞–∂–∞–Ω–µ –º—ñ—Å—Ü–µ: ");
        String location = scanner.nextLine();

        try (Connection conn = DatabaseManager.getConnection()) {
            PreparedStatement stmt = conn.prepareStatement(
                    "INSERT INTO donation_schedule (donor_id, scheduled_date, location, status) VALUES (?, ?, ?, 'pending')");

            stmt.setInt(1, id);
            stmt.setDate(2, Date.valueOf(date));
            stmt.setString(3, location);

            stmt.executeUpdate();
            System.out.println("\n‚úÖ –í–∏ —É—Å–ø—ñ—à–Ω–æ –∑–∞–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –¥–æ–Ω–∞—Ü—ñ—é!");
        } catch (Exception e) {
            System.out.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å—ñ –Ω–∞ –¥–æ–Ω–∞—Ü—ñ—é: " + e.getMessage());
        }
    }

    public static Donor fromDatabase(int id, String username) {
        try (Connection conn = DatabaseManager.getConnection()) {
            PreparedStatement stmt = conn.prepareStatement("SELECT * FROM donors WHERE id = ?");
            stmt.setInt(1, id);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                return new Donor(
                        id, username,
                        rs.getString("name"),
                        rs.getString("surname"),
                        rs.getInt("year"),
                        rs.getString("blood_type"),
                        rs.getInt("weight"),
                        rs.getInt("height")
                );
            }
        } catch (Exception e) {
            System.out.println("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–æ–Ω–æ—Ä–∞: " + e.getMessage());
        }
        return null;
    }
}