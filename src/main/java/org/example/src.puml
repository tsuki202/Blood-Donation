@startuml
'https://plantuml.com/class-diagram
    class User {
        #int id
        #String username
        #String role
        +User(int id, String username, String role)
        +exit()
        +abstract showMenu()
    }

    class UserData {
        -int id
        -String username
        -String password
        -String role
    }

    class Admin {
        -int id
        -String username
        -Scanner scanner
        +Admin(int id, String username)
        +showMenu()
        -displayUsersByRole()
        -deleteUserByRole()
        -manageRecipientRequests()
        -viewRecipientRequests(String filter)
        -respondToRequest()
    }

    class Donor {
        -String name
        -String surname
        -int year
        -String bloodType
        -int weight
        -int height
        +Donor(int id, String username, String name, String surname, int year, String bloodType, int weight, int height)
        +showMenu()
        -viewMyData()
        -updatePersonalData(Scanner scanner)
        -fillDonorQuestionnaire()
        -viewDonationHistory()
        -scheduleDonation()
        +static fromDatabase(int id, String username)
    }

    class Recipient {
        -String name
        -String surname
        -int year
        -String neededBloodType
        -Date requestDate
        -Date validUntil
        -String medicalCondition
        +Recipient(int id, String username, String name, String surname, int year, String neededBloodType, Date requestDate, Date validUntil, String medicalCondition)
        +showMenu()
        -viewMyData()
        -updatePersonalData(Scanner scanner)
        -searchDonorsByBloodType()
        -checkRequestStatus()
        -createNewRequest()
        -updateMedicalInfo()
        +static fromDatabase(int id, String username)
    }

    class AuthManager {
        -Scanner scanner
        +start()
        -loginUser()
        -registerUser()
        -createInitialDonorRecord(int userId, String username)
        -createInitialRecipientRecord(int userId, String username)
        -exitProgram()
        +displayUsersByRole()
        +deleteUserByRole()
    }

    class DatabaseManager {
        +static initializeDatabase()
        +static getConnection()
        +static getUserByLogin(String login)
        +static printUsersByRole(String role)
        +static deleteUserByLoginAndRole(String login, String role)
        +static registerUser(String login, String password, String role)
        +static createRecipientRequest(int recipientId, String notes)
    }

    class Main {
        +static main(String[] args)
    }

    interface UserAction {
        +showMenu()
    }

    class Role {
        +String value()
    }

    User --|> UserAction : implements
    Admin --|> User : extends
    Donor --|> User : extends
    Recipient --|> User : extends
    Role ..> Donor : annotates
    Role ..> Recipient : annotates
    Main --> AuthManager : creates
    AuthManager --> Admin : creates
    AuthManager --> Donor : creates
    AuthManager --> Recipient : creates
    DatabaseManager <-- Admin : uses
    DatabaseManager <-- Donor : uses
    DatabaseManager <-- Recipient : uses
    DatabaseManager <-- AuthManager : uses

@enduml

