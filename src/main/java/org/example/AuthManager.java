package org.example;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Scanner;

class AuthManager {
    private final Scanner scanner = new Scanner(System.in);

    public void start() {
        while (true) {
            System.out.println("\n\uD83D\uDCCC –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:");
            System.out.println("1Ô∏è‚É£ - –í—Ö—ñ–¥");
            System.out.println("2Ô∏è‚É£ - –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è");
            System.out.println("3Ô∏è‚É£ - –í–∏—Ö—ñ–¥");
            System.out.print("üîπ –í–∞—à –≤–∏–±—ñ—Ä: ");

            String input = scanner.nextLine();
            if (!input.matches("\\d+")) {
                System.out.println("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–≤—ñ–¥. –í–≤–µ–¥—ñ—Ç—å —á–∏—Å–ª–æ.");
                continue;
            }

            int choice = Integer.parseInt(input);

            switch (choice) {
                case 1 -> loginUser();
                case 2 -> registerUser();
                case 3 -> exitProgram();
                default -> System.out.println("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
            }
        }
    }

    private void loginUser() {
        System.out.print("\n\uD83D\uDC64 –í–≤–µ–¥—ñ—Ç—å –ª–æ–≥—ñ–Ω: ");
        String login = scanner.nextLine().trim();
        System.out.print("\uD83D\uDD11 –í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å: ");
        String password = scanner.nextLine();

        DatabaseManager.getUserByLogin(login).ifPresentOrElse(user -> {
            if (user.getPassword().equals(password)) {
                System.out.println("‚úÖ –í—Ö—ñ–¥ —É—Å–ø—ñ—à–Ω–∏–π!");
                switch (user.getRole().toUpperCase()) {
                    case "ADMIN" -> new Admin(user.getId(), user.getLogin()).showMenu();
                    case "DONOR" -> {
                        Donor donor = Donor.fromDatabase(user.getId(), user.getLogin());
                        if (donor == null) {
                            // –Ø–∫—â–æ –Ω–µ–º–∞—î –∑–∞–ø–∏—Å—É –≤ —Ç–∞–±–ª–∏—Ü—ñ donors, —Å—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤–∏–π –∑–∞–ø–∏—Å
                            createInitialDonorRecord(user.getId(), user.getLogin());
                            donor = Donor.fromDatabase(user.getId(), user.getLogin());
                        }
                        if (donor != null) {
                            donor.showMenu();
                        } else {
                            System.out.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é –¥–æ–Ω–æ—Ä–∞.");
                        }
                    }
                    case "RECIPIENT" -> {
                        Recipient recipient = Recipient.fromDatabase(user.getId(), user.getLogin());
                        if (recipient == null) {
                            // –Ø–∫—â–æ –Ω–µ–º–∞—î –∑–∞–ø–∏—Å—É –≤ —Ç–∞–±–ª–∏—Ü—ñ recipients, —Å—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤–∏–π –∑–∞–ø–∏—Å
                            createInitialRecipientRecord(user.getId(), user.getLogin());
                            recipient = Recipient.fromDatabase(user.getId(), user.getLogin());
                        }
                        if (recipient != null) {
                            recipient.showMenu();
                        } else {
                            System.out.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –ø—Ä–æ—Ñ—ñ–ª—é —Ä–µ—Ü–∏–ø—ñ—î–Ω—Ç–∞.");
                        }
                    }
                    default -> System.out.println("\uD83D\uDC64 –í–∏ —É–≤—ñ–π—à–ª–∏ —è–∫ " + user.getRole() + ". –ù–µ–º–∞—î –¥–æ–¥–∞—Ç–∫–æ–≤–æ–≥–æ –º–µ–Ω—é.");
                }
            } else {
                System.out.println("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å.");
            }
        }, () -> System.out.println("‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∏–π."));
    }

    private void registerUser() {
        System.out.print("\n\uD83C\uDD95 –í–≤–µ–¥—ñ—Ç—å –ª–æ–≥—ñ–Ω: ");
        String login = scanner.nextLine().trim();
        System.out.print("\uD83D\uDD10 –í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å: ");
        String password = scanner.nextLine();

        String role = null;
        while (role == null) {
            System.out.println("\uD83C\uDFBE –û–±–µ—Ä—ñ—Ç—å —Ä–æ–ª—å:");
            System.out.println("1 - –ê–¥–º—ñ–Ω");
            System.out.println("2 - –î–æ–Ω–æ—Ä");
            System.out.println("3 - –†–µ—Ü–∏–ø—ñ—î–Ω—Ç");
            System.out.print("–í–∞—à –≤–∏–±—ñ—Ä: ");

            String input = scanner.nextLine();
            switch (input) {
                case "1" -> role = "ADMIN";
                case "2" -> role = "DONOR";
                case "3" -> role = "RECIPIENT";
                default -> System.out.println("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
            }
        }

        boolean success = DatabaseManager.registerUser(login, password, role);
        if (success) {
            System.out.println("‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞.");

            // –ü—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ—ó —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó, –æ—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
            String finalRole = role;
            DatabaseManager.getUserByLogin(login).ifPresent(user -> {
                int userId = user.getId();

                // –°—Ç–≤–æ—Ä—é—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –∑–∞–ø–∏—Å–∏ –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Ä–æ–ª—ñ
                if (finalRole.equals("DONOR")) {
                    createInitialDonorRecord(userId, login);
                } else if (finalRole.equals("RECIPIENT")) {
                    createInitialRecipientRecord(userId, login);
                }
            });
        } else {
            System.out.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó. –ú–æ–∂–ª–∏–≤–æ, –ª–æ–≥—ñ–Ω –≤–∂–µ —ñ—Å–Ω—É—î.");
        }
    }

    private void createInitialDonorRecord(int userId, String username) {
        try (Connection conn = DatabaseManager.getConnection()) {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —ñ—Å–Ω—É—î –∑–∞–ø–∏—Å - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ!
            PreparedStatement checkStmt = conn.prepareStatement(
                    "SELECT COUNT(*) FROM donors WHERE id = ?");
            checkStmt.setInt(1, userId);
            ResultSet checkRs = checkStmt.executeQuery();

            if (checkRs.next() && checkRs.getInt(1) > 0) {
                return; // –ó–∞–ø–∏—Å –≤–∂–µ —ñ—Å–Ω—É—î
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤–∏–π –∑–∞–ø–∏—Å –¥–æ–Ω–æ—Ä–∞
            PreparedStatement stmt = conn.prepareStatement(
                    "INSERT INTO donors (id, name, surname, year, blood_type, weight, height) VALUES (?, ?, ?, ?, ?, ?, ?)");
            stmt.setInt(1, userId);
            stmt.setString(2, "–ù–æ–≤–∏–π"); // –¢–∏–º—á–∞—Å–æ–≤–µ —ñ–º'—è
            stmt.setString(3, "–î–æ–Ω–æ—Ä"); // –¢–∏–º—á–∞—Å–æ–≤–µ –ø—Ä—ñ–∑–≤–∏—â–µ
            stmt.setInt(4, 2000); // –¢–∏–º—á–∞—Å–æ–≤–∏–π —Ä—ñ–∫ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è
            stmt.setString(5, "–ù–µ–≤—ñ–¥–æ–º–æ"); // –¢–∏–º—á–∞—Å–æ–≤–∞ –≥—Ä—É–ø–∞ –∫—Ä–æ–≤—ñ
            stmt.setInt(6, 70); // –¢–∏–º—á–∞—Å–æ–≤–∞ –≤–∞–≥–∞
            stmt.setInt(7, 170); // –¢–∏–º—á–∞—Å–æ–≤–∏–π –∑—Ä—ñ—Å—Ç

            stmt.executeUpdate();
            System.out.println("‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –ø—Ä–æ—Ñ—ñ–ª—å –¥–æ–Ω–æ—Ä–∞.");
        } catch (SQLException e) {
            System.out.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é –¥–æ–Ω–æ—Ä–∞: " + e.getMessage());
        }
    }

    private void createInitialRecipientRecord(int userId, String username) {
        try (Connection conn = DatabaseManager.getConnection()) {
            // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ —ñ—Å–Ω—É—î –∑–∞–ø–∏—Å - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ!
            PreparedStatement checkStmt = conn.prepareStatement(
                    "SELECT COUNT(*) FROM recipients WHERE id = ?");
            checkStmt.setInt(1, userId);
            ResultSet rs = checkStmt.executeQuery();

            if (rs.next() && rs.getInt(1) > 0) {
                return; // –ó–∞–ø–∏—Å –≤–∂–µ —ñ—Å–Ω—É—î
            }

            // –°—Ç–≤–æ—Ä—é—î–º–æ –ø–æ—Ç–æ—á–Ω—É –¥–∞—Ç—É
            java.sql.Date currentDate = new java.sql.Date(System.currentTimeMillis());

            // –°—Ç–≤–æ—Ä—é—î–º–æ –¥–∞—Ç—É, —â–æ –Ω–∞ 30 –¥–Ω—ñ–≤ –ø—ñ–∑–Ω—ñ—à–µ –≤—ñ–¥ –ø–æ—Ç–æ—á–Ω–æ—ó
            java.util.Calendar calendar = java.util.Calendar.getInstance();
            calendar.setTime(currentDate);
            calendar.add(java.util.Calendar.DAY_OF_MONTH, 30);
            java.sql.Date validUntilDate = new java.sql.Date(calendar.getTimeInMillis());

            // –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤–∏–π –∑–∞–ø–∏—Å —Ä–µ—Ü–∏–ø—ñ—î–Ω—Ç–∞
            PreparedStatement stmt = conn.prepareStatement(
                    "INSERT INTO recipients (id, name, surname, year, needed_blood_type, request_date, valid_until, medical_condition) " +
                            "VALUES (?, ?, ?, ?, ?, ?, ?, ?)");
            stmt.setInt(1, userId);
            stmt.setString(2, "–ù–æ–≤–∏–π"); // –¢–∏–º—á–∞—Å–æ–≤–µ —ñ–º'—è
            stmt.setString(3, "–†–µ—Ü–∏–ø—ñ—î–Ω—Ç"); // –¢–∏–º—á–∞—Å–æ–≤–µ –ø—Ä—ñ–∑–≤–∏—â–µ
            stmt.setInt(4, 2000); // –¢–∏–º—á–∞—Å–æ–≤–∏–π —Ä—ñ–∫ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è
            stmt.setString(5, "–ù–µ–≤—ñ–¥–æ–º–æ"); // –¢–∏–º—á–∞—Å–æ–≤–∞ –≥—Ä—É–ø–∞ –∫—Ä–æ–≤—ñ
            stmt.setDate(6, currentDate); // –ü–æ—Ç–æ—á–Ω–∞ –¥–∞—Ç–∞
            stmt.setDate(7, validUntilDate); // –î–∞—Ç–∞ —á–µ—Ä–µ–∑ 30 –¥–Ω—ñ–≤
            stmt.setString(8, "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"); // –¢–∏–º—á–∞—Å–æ–≤–∏–π –º–µ–¥–∏—á–Ω–∏–π —Å—Ç–∞–Ω

            stmt.executeUpdate();
            System.out.println("‚úÖ –°—Ç–≤–æ—Ä–µ–Ω–æ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π –ø—Ä–æ—Ñ—ñ–ª—å —Ä–µ—Ü–∏–ø—ñ—î–Ω—Ç–∞.");
        } catch (SQLException e) {
            System.out.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é —Ä–µ—Ü–∏–ø—ñ—î–Ω—Ç–∞: " + e.getMessage());
        }
    }

    private void exitProgram() {
        System.out.println("\uD83D\uDC4B –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!");
        System.exit(0);
    }

    public void displayUsersByRole() {
        while (true) {
            System.out.println("\n\uD83D\uDCCB –û–±–µ—Ä—ñ—Ç—å —Ä–æ–ª—å –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É:");
            System.out.println("1 - –ê–¥–º—ñ–Ω–∏");
            System.out.println("2 - –î–æ–Ω–æ—Ä–∏");
            System.out.println("3 - –†–µ—Ü–∏–ø—ñ—î–Ω—Ç–∏");
            System.out.println("4 - –í–∏—Ö—ñ–¥");
            System.out.print("–í–∞—à –≤–∏–±—ñ—Ä: ");

            String input = scanner.nextLine();
            switch (input) {
                case "1" -> DatabaseManager.printUsersByRole("ADMIN");
                case "2" -> DatabaseManager.printUsersByRole("DONOR");
                case "3" -> DatabaseManager.printUsersByRole("RECIPIENT");
                case "4" -> {
                    return;
                }
                default -> System.out.println("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
            }
        }
    }

    public void deleteUserByRole() {
        while (true) {
            System.out.println("\n\uD83D\uDDD1Ô∏è –û–±–µ—Ä—ñ—Ç—å —Ä–æ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è:");
            System.out.println("1 - –ê–¥–º—ñ–Ω–∏");
            System.out.println("2 - –î–æ–Ω–æ—Ä–∏");
            System.out.println("3 - –†–µ—Ü–∏–ø—ñ—î–Ω—Ç–∏");
            System.out.println("4 - –í–∏—Ö—ñ–¥");
            System.out.print("–í–∞—à –≤–∏–±—ñ—Ä: ");

            String input = scanner.nextLine();
            switch (input) {
                case "1", "2", "3" -> {
                    String role = switch (input) {
                        case "1" -> "ADMIN";
                        case "2" -> "DONOR";
                        case "3" -> "RECIPIENT";
                        default -> throw new IllegalStateException("Unexpected value: " + input);
                    };
                    DatabaseManager.printUsersByRole(role);
                    System.out.print("–í–≤–µ–¥—ñ—Ç—å –ª–æ–≥—ñ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è: ");
                    String login = scanner.nextLine();
                    boolean success = DatabaseManager.deleteUserByLoginAndRole(login, role);
                    if (success) {
                        System.out.println("‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–∏–¥–∞–ª–µ–Ω–æ.");
                        DatabaseManager.printUsersByRole(role);
                    } else {
                        System.out.println("‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –∑ —Ç–∞–∫–∏–º –ª–æ–≥—ñ–Ω–æ–º –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∞–±–æ –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ä–æ–ª—ñ.");
                    }
                }
                case "4" -> {
                    return;
                }
                default -> System.out.println("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
            }
        }
    }
}