package org.example;

import java.sql.*;
import java.util.Scanner;

@Role("RECIPIENT")
public class Recipient extends User {
    private String name;
    private String surname;
    private int year;
    private String neededBloodType;
    private Date requestDate;
    private Date validUntil;
    private String medicalCondition;

    public Recipient(int id, String username, String name, String surname, int year,
                     String neededBloodType, Date requestDate, Date validUntil, String medicalCondition) {
        super(id, username, "RECIPIENT");
        this.name = name;
        this.surname = surname;
        this.year = year;
        this.neededBloodType = neededBloodType;
        this.requestDate = requestDate;
        this.validUntil = validUntil;
        this.medicalCondition = medicalCondition;
    }

    @Override
    public void showMenu() {
        Scanner scanner = new Scanner(System.in);
        int choice;
        do {
            System.out.println("\nüè• –í–∏ –∑–∞–π—à–ª–∏ —è–∫ –†–µ—Ü–∏–ø—ñ—î–Ω—Ç " + name + " " + surname);
            System.out.println("1 - –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –º–æ—ó –¥–∞–Ω—ñ");
            System.out.println("2 - –ü–æ—à—É–∫ –¥–æ–Ω–æ—Ä—ñ–≤ –∑–∞ –≥—Ä—É–ø–æ—é –∫—Ä–æ–≤—ñ");
            System.out.println("3 - –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –∑–∞–ø–∏—Ç—É");
            System.out.println("4 - –û–Ω–æ–≤–∏—Ç–∏ –º–µ–¥–∏—á–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é");
            System.out.println("5 - –í–∏–π—Ç–∏");
            System.out.print("–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é: ");

            while (!scanner.hasNextInt()) {
                System.out.println("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
                scanner.next();
            }

            choice = scanner.nextInt();
            scanner.nextLine();

            switch (choice) {
                case 1 -> viewMyData();
                case 2 -> searchDonorsByBloodType();
                case 3 -> checkRequestStatus();
                case 4 -> updateMedicalInfo();
                case 5 -> System.out.println("üè• –í–∏—Ö—ñ–¥ –∑ –º–µ–Ω—é —Ä–µ—Ü–∏–ø—ñ—î–Ω—Ç–∞.");
                default -> System.out.println("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –≤–∏–±—ñ—Ä! –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.");
            }
        } while (choice != 5);
    }

    private void viewMyData() {
        System.out.println("\nüìã –í–∞—à—ñ –¥–∞–Ω—ñ:");
        System.out.println("–Ü–º'—è: " + name);
        System.out.println("–ü—Ä—ñ–∑–≤–∏—â–µ: " + surname);
        System.out.println("–†—ñ–∫ –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è: " + year);
        System.out.println("–ü–æ—Ç—Ä—ñ–±–Ω–∞ –≥—Ä—É–ø–∞ –∫—Ä–æ–≤—ñ: " + neededBloodType);
        System.out.println("–î–∞—Ç–∞ –∑–∞–ø–∏—Ç—É: " + requestDate);
        System.out.println("–î—ñ–π—Å–Ω–∏–π –¥–æ: " + validUntil);
        System.out.println("–ú–µ–¥–∏—á–Ω–∏–π —Å—Ç–∞–Ω: " + medicalCondition);
    }

    private void searchDonorsByBloodType() {
        System.out.println("\nüîç –ü–æ—à—É–∫ –¥–æ–Ω–æ—Ä—ñ–≤ –∑ –≥—Ä—É–ø–æ—é –∫—Ä–æ–≤—ñ: " + neededBloodType);

        try (Connection conn = DatabaseManager.getConnection()) {
            PreparedStatement stmt = conn.prepareStatement(
                    "SELECT d.id, d.name, d.surname, d.year, d.blood_type, d.weight, d.height " +
                            "FROM donors d " +
                            "WHERE d.blood_type = ? AND d.id IN (" +
                            "  SELECT q.donor_id FROM donor_questionnaires q " +
                            "  WHERE q.feels_good = '–¢–∞–∫' AND q.had_symptoms = '–ù—ñ' " +
                            "  AND q.recent_surgeries = '–ù—ñ' AND q.tattoos = '–ù—ñ' " +
                            "  AND q.alcohol = '–ù—ñ'" +
                            ")");

            stmt.setString(1, neededBloodType);
            ResultSet rs = stmt.executeQuery();

            System.out.println("\nü©∏ –î–æ—Å—Ç—É–ø–Ω—ñ –¥–æ–Ω–æ—Ä–∏:");
            boolean found = false;

            while (rs.next()) {
                found = true;
                System.out.println("\nID: " + rs.getInt("id"));
                System.out.println("–Ü–º'—è: " + rs.getString("name") + " " + rs.getString("surname"));
                System.out.println("–í—ñ–∫: " + (2023 - rs.getInt("year")));
                System.out.println("–ì—Ä—É–ø–∞ –∫—Ä–æ–≤—ñ: " + rs.getString("blood_type"));
                System.out.println("–í–∞–≥–∞/–ó—Ä—ñ—Å—Ç: " + rs.getInt("weight") + " –∫–≥ / " + rs.getInt("height") + " —Å–º");
            }

            if (!found) {
                System.out.println("–ù–∞ –∂–∞–ª—å, –∑–∞—Ä–∞–∑ –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–∏—Ö –¥–æ–Ω–æ—Ä—ñ–≤ –∑ —Ü—ñ—î—é –≥—Ä—É–ø–æ—é –∫—Ä–æ–≤—ñ.");
            }
        } catch (Exception e) {
            System.out.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ—à—É–∫—É –¥–æ–Ω–æ—Ä—ñ–≤: " + e.getMessage());
        }
    }

    private void checkRequestStatus() {
        try (Connection conn = DatabaseManager.getConnection()) {
            PreparedStatement stmt = conn.prepareStatement(
                    "SELECT status, response_date, notes FROM recipient_requests WHERE recipient_id = ?");

            stmt.setInt(1, id);
            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
                System.out.println("\nüìã –°—Ç–∞—Ç—É—Å –≤–∞—à–æ–≥–æ –∑–∞–ø–∏—Ç—É:");
                System.out.println("–°—Ç–∞—Ç—É—Å: " + rs.getString("status"));
                System.out.println("–î–∞—Ç–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ: " + rs.getDate("response_date"));
                System.out.println("–ü—Ä–∏–º—ñ—Ç–∫–∏: " + rs.getString("notes"));
            } else {
                System.out.println("\n‚ÑπÔ∏è –í–∞—à –∑–∞–ø–∏—Ç —â–µ –æ–±—Ä–æ–±–ª—è—î—Ç—å—Å—è.");
            }
        } catch (Exception e) {
            System.out.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ —Å—Ç–∞—Ç—É—Å—É: " + e.getMessage());
        }
    }

    private void updateMedicalInfo() {
        Scanner scanner = new Scanner(System.in);
        System.out.println("\nüè• –û–Ω–æ–≤–ª–µ–Ω–Ω—è –º–µ–¥–∏—á–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó");

        System.out.print("–ü–æ—Ç–æ—á–Ω–∞ –≥—Ä—É–ø–∞ –∫—Ä–æ–≤—ñ (" + neededBloodType + "): ");
        String newBloodType = scanner.nextLine();
        if (!newBloodType.isEmpty()) {
            this.neededBloodType = newBloodType;
        }

        System.out.print("–ú–µ–¥–∏—á–Ω–∏–π —Å—Ç–∞–Ω (" + medicalCondition + "): ");
        String newCondition = scanner.nextLine();
        if (!newCondition.isEmpty()) {
            this.medicalCondition = newCondition;
        }

        System.out.print("–î—ñ–π—Å–Ω–∏–π –¥–æ (yyyy-mm-dd) (" + validUntil + "): ");
        String newDate = scanner.nextLine();
        if (!newDate.isEmpty()) {
            this.validUntil = Date.valueOf(newDate);
        }

        try (Connection conn = DatabaseManager.getConnection()) {
            PreparedStatement stmt = conn.prepareStatement(
                    "UPDATE recipients SET needed_blood_type = ?, medical_condition = ?, valid_until = ? WHERE id = ?");

            stmt.setString(1, neededBloodType);
            stmt.setString(2, medicalCondition);
            stmt.setDate(3, validUntil);
            stmt.setInt(4, id);

            stmt.executeUpdate();
            System.out.println("\n‚úÖ –ú–µ–¥–∏—á–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ!");
        } catch (Exception e) {
            System.out.println("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó: " + e.getMessage());
        }
    }

    public static Recipient fromDatabase(int id, String username) {
        try (Connection conn = DatabaseManager.getConnection()) {
            PreparedStatement stmt = conn.prepareStatement("SELECT * FROM recipients WHERE id = ?");
            stmt.setInt(1, id);
            ResultSet rs = stmt.executeQuery();
            if (rs.next()) {
                return new Recipient(
                        id, username,
                        rs.getString("name"),
                        rs.getString("surname"),
                        rs.getInt("year"),
                        rs.getString("needed_blood_type"),
                        rs.getDate("request_date"),
                        rs.getDate("valid_until"),
                        rs.getString("medical_condition")
                );
            }
        } catch (Exception e) {
            System.out.println("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ —Ä–µ—Ü–∏–ø—ñ—î–Ω—Ç–∞: " + e.getMessage());
        }
        return null;
    }
}